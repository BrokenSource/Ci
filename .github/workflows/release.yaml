name: release
on:
  workflow_dispatch:

jobs:
  wheels:
    name: Build Wheels
    runs-on: ubuntu-latest
    steps:
      - uses: BrokenSource/BrokenSource@main

      - name: Build wheels
        run: rye run broken pypi

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: Wheels
          path: Builds/Wheels/*.whl

  # releases:
  #   name: Release (${{matrix.os}})
  #   runs-on: ${{matrix.os}}
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, windows-latest, macos-14]
  #   steps:
  #     - uses: BrokenSource/BrokenSource@main

  #     - name: Build depthflow release
  #       run: rye run broken depthflow release --torch

  #     - name: Build pianola release
  #       run: rye run broken pianola release

  #     - name: Build shaderflow release
  #       run: rye run broken shaderflow release

  #     - name: Build spectronote release
  #       run: rye run broken spectronote release

  #     - name: Build upscalin release
  #       run: rye run broken upscalin release

  #     - name: Upload releases
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: Releases
  #         path: Releases/*

  publish-wheels:
    needs: [wheels]
    name: Publish wheels to PyPI
    runs-on: ubuntu-latest
    steps:
      - uses: BrokenSource/BrokenSource@main

      - name: Download wheel artifacts
        uses: actions/download-artifact@v3
        with:
          name: Wheels
          path: Build/Wheels

      - name: Install dependencies
        run: python -m pip install -U twine

      # - name: Publish to PyPI
      #   env:
      #     TWINE_USERNAME: token
      #     TWINE_PASSWORD: ${{secrets.PYPI_TOKEN}}
      #   run: twine upload Build/Wheels/*
